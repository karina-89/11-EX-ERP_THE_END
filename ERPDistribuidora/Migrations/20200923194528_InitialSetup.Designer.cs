// <auto-generated />
using System;
using ERPDistribuidora.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ERPDistribuidora.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20200923194528_InitialSetup")]
    partial class InitialSetup
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ERPDistribuidora.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("City")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("County")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("PostalCode")
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Calle Valencia, 5",
                            City = "Tavernes Blanques",
                            County = "Valencia",
                            Name = "Mercadona",
                            PostalCode = "46016"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Calle Campezo, 16, Pol. de las Mercedes",
                            City = "Madrid",
                            County = "Madrid",
                            Name = "Carrefour",
                            PostalCode = "28022"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Pol. Ind. La Granja, Carrer Beat Oriol, s/n",
                            City = "Montcada i Reixac",
                            County = "Barcelona",
                            Name = "Lidl",
                            PostalCode = "08110"
                        });
                });

            modelBuilder.Entity("ERPDistribuidora.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("City")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("County")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<string>("Password")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("PostalCode")
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.Property<string>("Role")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("UserName")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Justo Lozano",
                            Password = "12345",
                            Role = "User",
                            Salary = 24000m,
                            UserName = "jlozano"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Jaime Diez",
                            Password = "12345",
                            Role = "User",
                            Salary = 24000m,
                            UserName = "jdiez"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Socorro Cerdan",
                            Password = "12345",
                            Role = "Admin",
                            Salary = 32000m,
                            UserName = "scerdan"
                        });
                });

            modelBuilder.Entity("ERPDistribuidora.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ItemsCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("ItemsCategoryId");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ItemsCategoryId = 1,
                            Name = "Taza perro pirata",
                            Price = 10m
                        },
                        new
                        {
                            Id = 2,
                            ItemsCategoryId = 1,
                            Name = "Taza unicornio",
                            Price = 10m
                        },
                        new
                        {
                            Id = 3,
                            ItemsCategoryId = 2,
                            Name = "Cuchara",
                            Price = 0.5m
                        },
                        new
                        {
                            Id = 4,
                            ItemsCategoryId = 2,
                            Name = "Cuchillo",
                            Price = 0.5m
                        },
                        new
                        {
                            Id = 5,
                            ItemsCategoryId = 3,
                            Name = "Vaso minions",
                            Price = 2m
                        },
                        new
                        {
                            Id = 6,
                            ItemsCategoryId = 3,
                            Name = "Vaso frozen",
                            Price = 2m
                        },
                        new
                        {
                            Id = 7,
                            ItemsCategoryId = 4,
                            Name = "Plato hondo",
                            Price = 2.5m
                        },
                        new
                        {
                            Id = 8,
                            ItemsCategoryId = 4,
                            Name = "Plato llano",
                            Price = 2.5m
                        });
                });

            modelBuilder.Entity("ERPDistribuidora.Models.ItemsCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("ItemsCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Tazas"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Cubiertos"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Vasos"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Platos"
                        });
                });

            modelBuilder.Entity("ERPDistribuidora.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("AssignDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("OrderStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ShipDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AssignDate = new DateTime(2020, 9, 23, 21, 45, 27, 956, DateTimeKind.Local).AddTicks(1474),
                            CreationDate = new DateTime(2020, 9, 23, 21, 45, 27, 955, DateTimeKind.Local).AddTicks(9474),
                            CustomerId = 1,
                            EmployeeId = 1,
                            OrderStatus = 0
                        },
                        new
                        {
                            Id = 2,
                            AssignDate = new DateTime(2020, 9, 23, 21, 45, 27, 956, DateTimeKind.Local).AddTicks(3736),
                            CreationDate = new DateTime(2020, 9, 23, 21, 45, 27, 956, DateTimeKind.Local).AddTicks(3696),
                            CustomerId = 2,
                            EmployeeId = 1,
                            OrderStatus = 0
                        },
                        new
                        {
                            Id = 3,
                            AssignDate = new DateTime(2020, 9, 23, 21, 45, 27, 956, DateTimeKind.Local).AddTicks(3794),
                            CreationDate = new DateTime(2020, 9, 23, 21, 45, 27, 956, DateTimeKind.Local).AddTicks(3786),
                            CustomerId = 1,
                            EmployeeId = 2,
                            OrderStatus = 0
                        },
                        new
                        {
                            Id = 4,
                            AssignDate = new DateTime(2020, 9, 23, 21, 45, 27, 956, DateTimeKind.Local).AddTicks(3818),
                            CreationDate = new DateTime(2020, 9, 23, 21, 45, 27, 956, DateTimeKind.Local).AddTicks(3811),
                            CustomerId = 3,
                            EmployeeId = 1,
                            OrderStatus = 0
                        });
                });

            modelBuilder.Entity("ERPDistribuidora.Models.OrderLine", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(250) CHARACTER SET utf8mb4")
                        .HasMaxLength(250);

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderId", "Id");

                    b.HasIndex("ItemId");

                    b.ToTable("OrderLines");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            Id = 1,
                            Amount = 30m,
                            Description = "Taza perro pirata",
                            ItemId = 1,
                            Price = 10m,
                            Quantity = 3
                        },
                        new
                        {
                            OrderId = 1,
                            Id = 2,
                            Amount = 2.5m,
                            Description = "Cuchara",
                            ItemId = 3,
                            Price = 0.5m,
                            Quantity = 5
                        },
                        new
                        {
                            OrderId = 1,
                            Id = 3,
                            Amount = 20m,
                            Description = "Taza unicornio",
                            ItemId = 2,
                            Price = 10m,
                            Quantity = 2
                        },
                        new
                        {
                            OrderId = 2,
                            Id = 1,
                            Amount = 5m,
                            Description = "Cuchillo",
                            ItemId = 4,
                            Price = 0.5m,
                            Quantity = 10
                        },
                        new
                        {
                            OrderId = 3,
                            Id = 1,
                            Amount = 10m,
                            Description = "Vaso minions",
                            ItemId = 5,
                            Price = 2m,
                            Quantity = 5
                        },
                        new
                        {
                            OrderId = 3,
                            Id = 2,
                            Amount = 12.5m,
                            Description = "Plato llano",
                            ItemId = 8,
                            Price = 2.5m,
                            Quantity = 5
                        },
                        new
                        {
                            OrderId = 3,
                            Id = 3,
                            Amount = 25m,
                            Description = "Plato hondo",
                            ItemId = 7,
                            Price = 2.5m,
                            Quantity = 10
                        },
                        new
                        {
                            OrderId = 4,
                            Id = 1,
                            Amount = 7.5m,
                            Description = "Cuchillo",
                            ItemId = 4,
                            Price = 0.5m,
                            Quantity = 15
                        },
                        new
                        {
                            OrderId = 4,
                            Id = 2,
                            Amount = 40m,
                            Description = "Vaso frozen",
                            ItemId = 6,
                            Price = 2m,
                            Quantity = 20
                        });
                });

            modelBuilder.Entity("ERPDistribuidora.Models.Item", b =>
                {
                    b.HasOne("ERPDistribuidora.Models.ItemsCategory", "ItemsCategory")
                        .WithMany("Items")
                        .HasForeignKey("ItemsCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ERPDistribuidora.Models.Order", b =>
                {
                    b.HasOne("ERPDistribuidora.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ERPDistribuidora.Models.Employee", "Employee")
                        .WithMany("Orders")
                        .HasForeignKey("EmployeeId");
                });

            modelBuilder.Entity("ERPDistribuidora.Models.OrderLine", b =>
                {
                    b.HasOne("ERPDistribuidora.Models.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ERPDistribuidora.Models.Order", "Order")
                        .WithMany("OrderLines")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
